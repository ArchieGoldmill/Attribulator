name: .NET Core

on:
  push:
    tags: ['v*']
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.102
    - name: Build and publish with dotnet
      run: dotnet publish -c Release
    - name: Add NativeLibrary.dll
      run: wget -O YAMLDatabase/bin/x86/Release/netcoreapp3.0/publish/NativeLibrary.dll http://s.heyitsleo.io/NFSTools/NativeLibrary.dll
    - name: Build zip file
      run: zip -r Release.zip YAMLDatabase/bin/x86/Release/netcoreapp3.0/publish
    - name: Upload zip as artifact
      uses: actions/upload-artifact@v1
      with:
        name: Release.zip
        path: Release.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: _Generated by GitHub Actions_
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Release.zip
        asset_name: Release.zip
        asset_content_type: application/zip
